@using homepage.ViewModel
@using homepage.Models
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    @*mapbox*@
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css" rel="stylesheet" />
    @*mapbox plugins directions*@
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.js"></script>
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.1.0/mapbox-gl-directions.css" type="text/css" />
    @*mapbox plugins language*@
    <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-language/v0.10.1/mapbox-gl-language.js'></script>


    @*ajax*@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    @*JQuery&JQueryUI*@
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/jquery-1.12.4.js"></script>
    <script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
    <link href="~/css/CustomerlizeCSSofLocationAndRoute.css" rel="stylesheet" />

    <style>
        .footer {
            position: fixed;
            z-index: 1;
            left: 0;
            bottom: 0;
            height: 10%;
            width: 100%;
            background-color: rgba(192, 192, 192, 0.85);
            color: black;
            text-align: center;
        }

        .footer_withcontent {
            position: fixed;
            z-index: 1;
            left: 0;
            bottom: 0;
            height: 50%;
            width: 100%;
            background-color: rgba(192, 192, 192, 0.85);
            color: black;
            text-align: center;
        }

        .toggleUp {
            margin-top: 0.5em;
        }

        .imageblock {
            margin: 1em;
        }

        body {
            margin: 0;
            padding: 0;
        }

        .map {
            position: absolute;
            top: 50px;
            left: 0;
            bottom: 0;
            width: 100%;
            z-index: -1;
        }

        .map_afterclick {
            position: absolute;
            top: 50px;
            left: 0;
            bottom: 50%;
            width: 100%;
            z-index: -1;
        }

        #game_list {
            z-index: 99;
        }

        #reposition {
            z-index: 1;
            position: fixed;
            right: 1em;
            margin-top: 0;
            border-radius: 50%;
            height: 2em;
            width: 2em;
        }

        #inner_content {
            border-radius: 15px;
            width: 90%;
            height: 80%;
            margin: 0px auto;
            background-color: rgba(255, 255, 255, 0.90)
        }

            #inner_content img {
                width: 20%;
                float: left;
                margin: 1em;
                display: flex;
                align-items: center;
            }

        #follow_modal {
            z-index: 2;
        }
    </style>
</head>
<body>
    @*Navbar*@
    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#myNavbar">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="#">FunDayTrip 探索遊戲</a>
            </div>
            <div class="collapse navbar-collapse" id="myNavbar">
                <ul class="nav navbar-nav" style="display:none">
                    <!-- <li class="active"><a href="#">Home</a></li>
                    <li class="dropdown" >
                      <a class="dropdown-toggle" data-toggle="dropdown" href="#">Page 1 <span class="caret"></span></a>
                      <ul class="dropdown-menu">
                        <li><a href="#">Page 1-1</a></li>
                        <li><a href="#">Page 1-2</a></li>
                        <li><a href="#">Page 1-3</a></li>
                      </ul>
                    </li>
                    <li><a href="#">Page 2</a></li>
                    <li><a href="#">Page 3</a></li> -->
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="#"><span class="glyphicon glyphicon-user"></span> @Session[CDictionary.SK_ActiveRoleName]</a></li>
                    @*<li><a href="#"><span class="glyphicon glyphicon-log-in"></span> Login</a></li>*@
                    <li><a href="javascript:exitGame()"><span class="glyphicon glyphicon-remove"></span>退出遊戲</a></li>

                </ul>
            </div>
        </div>
    </nav>

    @*地圖內容*@
    <div id="map" class="map"></div>

    @*遊戲框*@
    <div id="game_modal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <div style="justify-content:center;"> 
                <button class="btn btn-info" onclick="" type="submit">確定</button>
                <button class="btn btn-info" onclick="" type="submit">取消</button>
                <div id="follower_list"></div>
            </div>
        </div>
    </div>
    @*遊戲框*@

    @*內容框*@
    <div id="foot-content" class="footer">
        <div id="content-toggle" class="toggleUp"><span id="content-icon" class="glyphicon glyphicon-chevron-up"></span></div>
        <div id="current_position" value="">目前位置:</div>
        <div id="inner_content" value="">

        </div>
    </div>


    <script>
            var now_x = 0;
            var now_y = 0;
        //目前位置
        //$("#reposition").on("click", position_now);
        function position_now() {
            navigator.geolocation.getCurrentPosition(function (position) {
                let x = position.coords.longitude;
                let y = position.coords.latitude;
                $("#current_position").html("目前位置: " + x.toFixed(6) + ", " + y.toFixed(6));
                now_x = x;
                now_y = y;
            });
            };
            position_now();

        //地圖初始化==========================
        mapboxgl.accessToken = 'pk.eyJ1IjoicGVhY2V3YW5nIiwiYSI6ImNrZmx6YWl6cTB6YWcyd21xMzFqNTZ5YzYifQ.WxjLSvp5k6yCWELcbMWeMw';
        //顯示中文地圖
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/streets-v10',
            center: [121.5173115, 25.045181],
            zoom: 11
        });
        var language = new MapboxLanguage({ defaultLanguage: 'zh' });
        map.addControl(language);

        //===================================
        //地點所有資訊組成json，顯示在地圖
            var groupArray = [];

        $.ajax({
            url: "@Url.Action("get","Game")",
            type: "POST",
            dataType: "json",
            data: { group_id: 0 }
        }).done(function (response) {
            //console.log(response);
            for (var i = 0; i < response.length; i++) {
                console.log(response);
                Name_Group = response[i].fGroup_GameNav.fName_GameGroup;
                Description_Group = response[i].fGroup_GameNav.fDescription_GameGroup;
                Coords_Group = [response[i].fItems_GameNav[0].fX_Coordinate, response[i].fItems_GameNav[0].fY_Coordinate];
                Id_Group = response[i].fGroup_GameNav.fId_GameGroup;
                Route_Group = response[i].fGroup_GameNav.fId_Route;
                Photo_Group = response[i].fGroup_GameNav.fPhoto_GameGroup;
                groupJson =
                {
                    'type': 'Feature',
                    'properties': {
                        'groupId': Id_Group,
                        'photo': Photo_Group,
                        'description': '<strong>' + Name_Group + '</strong><p>' + Description_Group + '</p>'
                    },
                    'geometry': {
                        'type': 'Point',
                        'coordinates': Coords_Group
                    }
                };
                groupArray.push(groupJson);
                console.log(Photo_Group);

            };
        }).fail(function (xhr) {
            console.log(xhr.status + xhr.responseText);
        });

        //地圖載入
        map.on("load", function () {
            //地點加入地圖====================
            map.loadImage(
                'https://docs.mapbox.com/mapbox-gl-js/assets/custom_marker.png',
                function (error, image) {
                    if (error) throw error;
                    map.addImage('custom-marker', image);

                    map.addSource('game_group', {
                        'type': 'geojson',
                        'data': {
                            'type': 'FeatureCollection',
                            'features': groupArray
                        }
                    });//End：map.addSource

                    map.addLayer({
                        'id': 'game_group',
                        'type': 'symbol',
                        'source': 'game_group',
                        'layout': {
                            'icon-image': 'custom-marker',
                            'icon-allow-overlap': true
                        }
                    });//End：map.addLayer


                });
            geolocate.trigger();


        });
            //====================

            function fly(Point) {
                map.flyTo({
                    center: [Point[0], Point[1] - 0.001], // [X,Y] Array
                    essential: true,
                    zoom: 17
                })
            };

            function GetRoutePathArray(RouteInnerHTMLPath) {
                var RoutePath = new Array();
                var tempPoint = new Array();
                var strRoutePath = (RouteInnerHTMLPath + "").split(',');
                for (var i = 0; i < strRoutePath.length; i += 2) {
                    tempPoint[i / 2] = new Array();
                    tempPoint[i / 2][1] = strRoutePath[i + 1];
                    tempPoint[i / 2][0] = strRoutePath[i];
                    RoutePath.push(tempPoint[i / 2]);
                }
                return RoutePath;
            }

            //使用者定位
            var geolocate = new mapboxgl.GeolocateControl({
                positionOptions: {
                    enableHighAccuracy: true
                },
                trackUserLocation: true
            });
            // Add the control to the map.
            map.addControl(geolocate);

            //點擊遊戲圖標
            map.on('click', 'game_group', function (e) {

                var coordinates = e.features[0].geometry.coordinates.slice();
                var description = e.features[0].properties.description;
                var group_id = e.features[0].properties.groupId;
                var photo = e.features[0].properties.photo;
                position_now();
                var userPosition = [now_x, now_y];
                // Ensure that if the map is zoomed out such that multiple
                // copies of the feature are visible, the popup appears
                // over the copy being pointed to.
                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
                }
                _fX_Coordinate = coordinates[0];
                _fY_Coordinate = coordinates[1];
                Coords_Location = [_fX_Coordinate, _fY_Coordinate];

                showContent(group_id, userPosition, coordinates, description, photo);


                fly(Coords_Location);

            });

            // Change the cursor to a pointer when the mouse is over the places layer.
            map.on('mouseenter', 'game_group', function () {
                map.getCanvas().style.cursor = 'pointer';
            });

            // Change it back to a pointer when it leaves.
            map.on('mouseleave', 'game_group', function  () {
                map.getCanvas().style.cursor = '';
            });
            //show 地點路線
            function getGameItems(id) {

                if (map.getSource('game_items')) {
                    map.removeLayer('game_items');
                    map.removeSource('game_items');
                };

                $.ajax({
                    url: "@Url.Action("get","Game")",
                    type: "POST",
                    dataType: "json",
                    data: { group_id: id }
                }).done(function (response) {
                    let itemArray = [];
                for (var j = 0; j < response.fItems_GameNav.length; j++) {
                    console.log(response);
                    let Name_Item = response.fItems_GameNav[j].fName_Game;
                    let Coords_Item = [response.fItems_GameNav[j].fX_Coordinate, response.fItems_GameNav[j].fY_Coordinate];
                    let Id_Item = response.fItems_GameNav[j].fId_GameGroup;

                    itemJson =
                    {
                        'type': 'Feature',
                        'properties': {
                            'groupId': Id_Item,
                            'description': Name_Item
                        },
                        'geometry': {
                            'type': 'Point',
                            'coordinates': Coords_Item
                        }
                    };
                    itemArray.push(itemJson);
                    }

                    map.addSource('game_items', {
                        'type': 'geojson',
                        'data': {
                            'type': 'FeatureCollection',
                            'features': itemArray
                        }
                    });//End：map.addSource

                    map.addLayer({
                        'id': 'game_items',
                        'type': 'symbol',
                        'source': 'game_items',
                        'layout': {
                            'icon-image': 'custom-marker',
                            'icon-allow-overlap': true
                        }
                    })

                }).fail(function (xhr) {
                    console.log(xhr.status + xhr.responseText);
                });
            }

        //內容框上拉
        $("#foot-content").on("click", function () {
            $(this).toggleClass("footer_withcontent", 1000, "swing", function () {
                $("#content-icon").toggleClass("glyphicon-chevron-down", 1500, "swing");
            });
        });

            function showContent(group_id, start, end, descript, photo) {
                $("#foot-content").toggleClass("footer_withcontent", 1000, "swing", function () {
                    $("#content-icon").toggleClass("glyphicon-chevron-down", 1500, "swing");
                });

                //導引使用者到該地點
                let url = 'https://api.mapbox.com/directions/v5/mapbox/walking/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=false&geometries=geojson&access_token=' + mapboxgl.accessToken;
                var req = new XMLHttpRequest();

                req.open('GET', url, true);
                req.onload = function () {
                    var json = JSON.parse(req.response);
                    var data = json.routes[0];
                    var route = data.geometry.coordinates;
                    var distance = data.distance;
                    var duration = data.duration;
                    console.log(distance + "," + duration)

                    var content = "您與起點距離: " + (distance / 1000).toFixed(1) + "公里, 步行時間: " + (duration / 60).toFixed(1) + "分鐘<br>";
                    content += end + "<br>" + descript + "<br>";
                    content += "<img src='" + photo + "' / >";
                    content += "<button value='" + group_id + "' onclick='beginGame(this)'> 開始遊戲 </button>";
                    $("#inner_content").html(content);

                    var geojson = {
                        type: 'Feature',
                        properties: {},
                        geometry: {
                            type: 'LineString',
                            coordinates: route
                        }
                    };
                    // if the route already exists on the map, reset it using setData
                    if (map.getSource('route'+ group_id)) {
                        map.getSource('route' + group_id).setData(geojson);
                    } else { // otherwise, make a new request
                        map.addLayer({
                            id: 'route' + group_id,
                            type: 'line',
                            source: {
                                type: 'geojson',
                                data: {
                                    type: 'Feature',
                                    properties: {},
                                    geometry: {
                                        type: 'LineString',
                                        coordinates: geojson
                                    }
                                }
                            },
                            layout: {
                                'line-join': 'round',
                                'line-cap': 'round'
                            },
                            paint: {
                                'line-color': '#3887be',
                                'line-width': 5,
                                'line-opacity': 0.75
                            }
                        });
                    }
                    // add turn instructions here at the end
                };
                req.send();

            };

            function beginGame(obj) {
                getGameItems(obj.value);
                map.setLayoutProperty('game_group', 'visibility', 'none');
                gamecon();

            };
            function exitGame() {
                map.setLayoutProperty('game_group', 'visibility', 'visible');
                map.setLayoutProperty('game_items', 'visibility', 'none');

            };
            //彈跳遊戲視窗
            function gamecon() {
                game_modal.style.display = "block";






            };
            $(".close").on("click", function () {
                game_modal.style.display = "none";
            });

    </script>

</body>
</html>