
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ShowHeatMap</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no" />
    <script src="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v1.12.0/mapbox-gl.css" rel="stylesheet" />

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
        }
    </style>
</head>
<body>

    <div id="map" onclick="remove()" ondblclick="selfreload()"></div>
    <script>
        //要求顯示地圖===========================
        //顯示中文地圖
        mapboxgl.accessToken = 'pk.eyJ1IjoidmVybmFuYW5hbmFuYW5hbmFuYSIsImEiOiJja2VtbjM3MXgwOG53MnlzYWh4b3ozb3l4In0.WV0nJqpHVfMdABV83v_6hQ';
        var map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/dark-v10',
            center: [-120, 50],
            zoom: 2
        });
      
        map.on('load', function () {
            // Add a geojson point source.
            // Heatmap layers also work with a vector tile source.
            map.addSource('earthquakes', {
                'type': 'geojson',
                'data':
                    geojson
                //'https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson'
            });

            map.addLayer(
                {
                    'id': 'earthquakes-heat',
                    'type': 'heatmap',
                    'source': 'earthquakes',
                    'maxzoom': 9,
                    'paint': {
                        // Increase the heatmap weight based on frequency and property magnitude
                        'heatmap-weight': [
                            'interpolate',
                            ['linear'],
                            ['get', 'mag'],
                            0,
                            0,
                            6,
                            1
                        ],
                        // Increase the heatmap color weight weight by zoom level
                        // heatmap-intensity is a multiplier on top of heatmap-weight
                        'heatmap-intensity': [
                            'interpolate',
                            ['linear'],
                            ['zoom'],
                            0,
                            1,
                            9,
                            3
                        ],
                        // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).
                        // Begin color ramp at 0-stop with a 0-transparancy color
                        // to create a blur-like effect.
                        'heatmap-color': [
                            'interpolate',
                            ['linear'],
                            ['heatmap-density'],
                            0,
                            'rgba(33,102,172,0)',
                            0.2,
                            'rgb(103,169,207)',
                            0.4,
                            'rgb(209,229,240)',
                            0.6,
                            'rgb(253,219,199)',
                            0.8,
                            'rgb(239,138,98)',
                            1,
                            'rgb(178,24,43)'
                        ],
                        // Adjust the heatmap radius by zoom level
                        'heatmap-radius': [
                            'interpolate',
                            ['linear'],
                            ['zoom'],
                            0,
                            2,
                            9,
                            20
                        ],
                        // Transition from heatmap to circle layer by zoom level
                        'heatmap-opacity': [
                            'interpolate',
                            ['linear'],
                            ['zoom'],
                            7,
                            1,
                            9,
                            0
                        ]
                    }
                },
                'waterway-label'
            );

            map.addLayer(
                {
                    'id': 'earthquakes-point',
                    'type': 'circle',
                    'source': 'earthquakes',
                    'minzoom': 7,
                    'paint': {
                        // Size circle radius by earthquake magnitude and zoom level
                        'circle-radius': [
                            'interpolate',
                            ['linear'],
                            ['zoom'],
                            7,
                            ['interpolate', ['linear'], ['get', 'mag'], 1, 1, 6, 4],
                            16,
                            ['interpolate', ['linear'], ['get', 'mag'], 1, 5, 6, 50]
                        ],
                        // Color circle by earthquake magnitude
                        'circle-color': [
                            'interpolate',
                            ['linear'],
                            ['get', 'mag'],
                            1,
                            'rgba(33,102,172,0)',
                            2,
                            'rgb(103,169,207)',
                            3,
                            'rgb(209,229,240)',
                            4,
                            'rgb(253,219,199)',
                            5,
                            'rgb(239,138,98)',
                            6,
                            'rgb(178,24,43)'
                        ],
                        'circle-stroke-color': 'white',
                        'circle-stroke-width': 1,
                        // Transition from heatmap to circle layer by zoom level
                        'circle-opacity': [
                            'interpolate',
                            ['linear'],
                            ['zoom'],
                            7,
                            0,
                            8,
                            1
                        ]
                    }
                },
                'waterway-label'
            );


        });

    </script>


    <script>


        var LocArray = [];
        function connectDB() {
            console.log("connectdb");
            LocArray = [];

            $.ajax({
                url: "/Home/getAllLocations",
                type: "POST",
                dataType: "json",
                //data: { }
            }).done(function (response) {
                console.log(response);
                for (var i = 0; i < response.length; i++) {
                    Coords_Location = [response[i].fX_Coordinate, response[i].fY_Coordinate];
                    Id_Location = response[i].fId_Location;

                    locJson =
                    {
                        'type': 'Feature',
                        'properties': {
                            'dbh': 65,

                        },
                        'geometry': {
                            'type': 'Point',
                            'coordinates': Coords_Location
                        }
                    }
                    LocArray.push(locJson);
                }//end for
            }).fail(function (xhr) {
                console.log(xhr.status + xhr.responseText);
            });//end ajax
        };
        $(document).ready(function (e) {
            connectDB();
        });
    </script>
    <script>
       
            function remove() {
            if (map.getLayer("earthquakes-point")) {
                map.removeLayer("earthquakes-point");
            }

            if (map.getLayer("earthquakes-heat")) {
                map.removeLayer("earthquakes-heat");
            }
            if (map.getSource("earthquakes")) {
                map.removeSource("earthquakes");
            }

            console.log("addnewsource");
            map.addSource('trees', {
                'type': 'geojson',
                'data': {
                'type': 'FeatureCollection',
                    'features': LocArray
                }
            });
            map.addLayer({
                'id': 'trees-heat',
                'type': 'heatmap',
                'source': 'trees',
                'maxzoom': 15,
                'paint': {
                // increase weight as diameter breast height increases
                'heatmap-weight': {
                'property': 'dbh',
                        'type': 'exponential',
                        'stops': [
                            [1, 0],
                            [62, 1]
                        ]
                    },
                    // increase intensity as zoom level increases
                    'heatmap-intensity': {
                stops: [
                            [11, 1],
                            [15, 3]
                        ]
                    },
                    // assign color values be applied to points depending on their density
                    'heatmap-color': [
                        'interpolate',
                        ['linear'],
                        ['heatmap-density'],
                        0, 'rgba(236,222,239,0)',
                        0.2, 'rgb(208,209,230)',
                        0.4, 'rgb(166,189,219)',
                        0.6, 'rgb(103,169,207)',
                        0.8, 'rgb(28,144,153)'
                    ],
                    // increase radius as zoom increases
                    'heatmap-radius': {
                stops: [
                            [11, 15],
                            [15, 20]
                        ]
                    },
                    // decrease opacity to transition into the circle layer
                    'heatmap-opacity': {
                        default: 1,
                        stops: [
                            [14, 1],
                            [15, 0]
                        ]
                    },
                }
            }, 'waterway-label');

            map.addLayer({
                'id': 'trees-point',
                'type': 'circle',
                'source': 'trees',
                'minzoom': 14,
                'paint': {
                // increase the radius of the circle as the zoom level and dbh value increases
                'circle-radius': {
                'property': 'dbh',
                        'type': 'exponential',
                        'stops': [
                            [{zoom: 15, value: 1 }, 5],
                            [{zoom: 15, value: 62 }, 10],
                            [{zoom: 22, value: 1 }, 20],
                            [{zoom: 22, value: 62 }, 50],
                        ]
                    },
                    'circle-color': {
                'property': 'dbh',
                        'type': 'exponential',
                        'stops': [
                            [0, 'rgba(236,222,239,0)'],
                            [10, 'rgb(236,222,239)'],
                            [20, 'rgb(208,209,230)'],
                            [30, 'rgb(166,189,219)'],
                            [40, 'rgb(103,169,207)'],
                            [50, 'rgb(28,144,153)'],
                            [60, 'rgb(1,108,89)']
                        ]
                    },
                    'circle-stroke-color': 'white',
                    'circle-stroke-width': 1,
                    'circle-opacity': {
                'stops': [
                            [14, 0],
                            [15, 1]
                        ]
                    }
                }
            }, 'waterway-label');


           
        };
    </script>
    <script>
        var geojson = {
            "type": "FeatureCollection",
            "crs": {
                "type": "name",
                "properties": {
                    "name": "urn:ogc:def:crs:OGC:1.3:CRS84"
                }
            },
            "features": [
                {
                    "type": "Feature",
                    "properties": {
                        "id": "ak16994521",
                        "mag": 2.3,
                        "time": 1507425650893,
                        "felt": null,
                        "tsunami": 0
                    },
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -151.5129,
                            63.1016,
                            0.0
                        ]
                    }
                },
                {
                    "type": "Feature",
                    "properties": {
                        "id": "ak16994519",
                        "mag": 1.7,
                        "time": 1507425289659,
                        "felt": null,
                        "tsunami": 0
                    },
                    "geometry": {
                        "type": "Point",
                        "coordinates": [
                            -150.4048,
                            63.1224,
                            105.5
                        ]
                    }
                }
            ]
        };
    </script>
</body>
</html>
